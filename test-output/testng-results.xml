<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Test Suite for AutomationPractice" duration-ms="58232" started-at="2019-09-01T09:17:37Z" finished-at="2019-09-01T09:18:36Z">
    <groups>
    </groups>
    <test name="AutomationPractice Test Cases" duration-ms="58232" started-at="2019-09-01T09:17:37Z" finished-at="2019-09-01T09:18:36Z">
      <class name="com.automationpractice.qa.testcases.Testcases">
        <test-method status="PASS" signature="AutomationPractice_TC01(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.automationpractice.qa.testcases.Testcases@6536e911]" name="AutomationPractice_TC01" duration-ms="30154" started-at="2019-09-01T14:47:38Z" data-provider="getCRMTestData" finished-at="2019-09-01T14:48:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABCD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CBDE]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[25.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[October]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2000.0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[ABC Corp.]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[ABCD]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Miami]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Florida]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[33109.0]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[1234.0]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[3456.0]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Tampa, Florida]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutomationPractice_TC01 -->
        <test-method status="PASS" signature="AutomationPractice_TC02()[pri:2, instance:com.automationpractice.qa.testcases.Testcases@6536e911]" name="AutomationPractice_TC02" duration-ms="2556" started-at="2019-09-01T14:48:08Z" depends-on-methods="com.automationpractice.qa.testcases.Testcases.AutomationPractice_TC01" finished-at="2019-09-01T14:48:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutomationPractice_TC02 -->
        <test-method status="PASS" signature="AutomationPractice_TC03()[pri:3, instance:com.automationpractice.qa.testcases.Testcases@6536e911]" name="AutomationPractice_TC03" duration-ms="19401" started-at="2019-09-01T14:48:11Z" depends-on-methods="com.automationpractice.qa.testcases.Testcases.AutomationPractice_TC02" finished-at="2019-09-01T14:48:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutomationPractice_TC03 -->
        <test-method status="PASS" signature="AutomationPractice_TC04()[pri:4, instance:com.automationpractice.qa.testcases.Testcases@6536e911]" name="AutomationPractice_TC04" duration-ms="3842" started-at="2019-09-01T14:48:30Z" depends-on-methods="com.automationpractice.qa.testcases.Testcases.AutomationPractice_TC03" finished-at="2019-09-01T14:48:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutomationPractice_TC04 -->
        <test-method status="FAIL" signature="AutomationPractice_TC05()[pri:5, instance:com.automationpractice.qa.testcases.Testcases@6536e911]" name="AutomationPractice_TC05" duration-ms="1126" started-at="2019-09-01T14:48:34Z" depends-on-methods="com.automationpractice.qa.testcases.Testcases.AutomationPractice_TC01" finished-at="2019-09-01T14:48:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	Invalid email address. expected [Invalid email address.] but found [123456]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	Invalid email address. expected [Invalid email address.] but found [123456]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at com.automationpractice.qa.pages.AccountLoginPage.LoginFail(AccountLoginPage.java:100)
	at com.automationpractice.qa.testcases.Testcases.AutomationPractice_TC05(Testcases.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AutomationPractice_TC05 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.automationpractice.qa.testcases.Testcases@6536e911]" name="tearDown" is-config="true" duration-ms="182" started-at="2019-09-01T14:48:36Z" finished-at="2019-09-01T14:48:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.automationpractice.qa.testcases.Testcases -->
    </test> <!-- AutomationPractice Test Cases -->
  </suite> <!-- Test Suite for AutomationPractice -->
</testng-results>
